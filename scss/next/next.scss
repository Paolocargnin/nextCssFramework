@function extend($obj, $ext-obj) {
  @return map-merge($obj, $ext-obj);
}

// $default-object: (
//   dont: you think,
//   this: is awesome
// );

// $object: (
//   this: is amazing
// );

// $merge: extend($default-object, $object); 



// /**
//  * This results in
// $merge: (
//   dont: you think,
//   this: is amazing
// );
//  */



 $gridDefault: (
 		prefixRow: 'row',
 		prefixCol: 'col',
 		dividers: (1, 2, 3, 4, 5, 6, 10, 12),
		showMobileClass: 0,
 		sizes: (
 				xs: (
 					from: 0px
 					),
 				sm: (
					from: 768px
 					),
 				m: (
 					from: 992px
 					),
 				l: (
 					from: 1200px
 					),
 			)
 	);

$gridOpts : ();
// /* ----
//			Building the percatage Widht
//											---- */

$gridOptions :  extend($gridDefault,$gridOpts);

// Trying 
// @for $i from 1 through length(map-get($gridDefault, sizes)) {
// 	$name:nth;
// 	$sizeInfo: no;

// 	.classProva#{$i}-#{$name}-#{$sizeInfo}{
// 		display: none;
// 	}

// }


.#{map-get($gridOptions, prefixRow)} > *[class*="#{map-get($gridOptions,prefixCol)}"]{
	-moz-box-sizing: border-box;
	box-sizing: border-box;
	display: -webkit-box;
	display: -webkit-flex;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-orient: vertical;
	-webkit-box-direction: normal;
	-webkit-flex-direction: column;
	-ms-flex-direction: column;
	flex-direction: column;
	-webkit-box-flex: 0;
	-webkit-flex-grow: 0;
	-ms-flex-positive: 0;
	flex-grow: 0;
	-webkit-flex-shrink: 0;
	-ms-flex-negative: 0;
	flex-shrink: 0;
	padding-right: 0.5rem;
	padding-left: 0.5rem;
}


@each $name, $sizeInfo in map-get($gridOptions, sizes){


	// if it is the Mobile Class (first of the each) showMobileCLass is set to 0 
	// don't show the _ClassName  - TODO
	// @if index(map-get($gridOptions, sizes),$sizeInfo) == 0{
	// 	$className :  '';
	// } @else {
	//  	$className : -#{$name};
	// }
 	$className : -#{$name};
	
 	// $className : -#{$name};
	$prefix: #{map-get($gridOptions, prefixRow)}#{$className};

	@media only screen and (min-width: map-get($sizeInfo,from)) {

		//the auto row / the columns it will adapt 
		.#{map-get($gridOptions,prefixCol)}-{
			-webkit-box-flex: 1;
			-webkit-flex-grow: 1;
			-ms-flex-positive: 1;
			flex-grow: 1;
			-webkit-flex-basis: 0;
			-ms-flex-preferred-size: 0;
			flex-basis: 0;
			max-width: 100%;			
		}


		$widths:();
		@each $divider in map-get($gridOptions, dividers){
			@for $i from 1 to  $divider {
				$theWidth : $i / $divider * 100%;
				@if map-has-key($widths, $theWidth){
					//if there is I put the extend,
					.#{$prefix}-#{$i}-#{$divider}{
						@extend .#{map-get( $widths , $theWidth )};
					};
				} @else {
					// i create a new widths
					$widths: map-merge(
						(
							$theWidth : #{$prefix}-#{$i}-#{$divider}
						),
						$widths);
					.#{$prefix}-#{$i}-#{$divider}{
							 -webkit-flex-basis : $theWidth;
						-ms-flex-preferred-size : $theWidth;
									 flex-basis : $theWidth;
									  max-width : $theWidth;
					};
					.#{$prefix}-offset-#{$i}-#{$divider}{
						margin-left: $theWidth;
					}
				}

			}	
		}
	}

 }

